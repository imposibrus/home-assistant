- id: '1618991336207'
  alias: Home Assistant Restart Notification
  description: ''
  use_blueprint:
    path: gregoryduckworth/restart_notification.yaml
    input:
      notification_message: Home Assistant has successfully restarted!
      notify_device: 1ada3fdc6976622bd0226b539a5ccf25
- id: '1618991966165'
  alias: Home Assistant update notification
  description: ''
  use_blueprint:
    path: Klumper/update_notification.yaml
    input:
      notification_message: Home Assistant {{ newest_version }} is available
      delay: 0
      updater: binary_sensor.updater
      notify_device: 1ada3fdc6976622bd0226b539a5ccf25
      is_ios: false
- id: '1620159708446'
  alias: –û–±–µ–¥ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è!
  description: ''
  trigger:
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.dinner_end
  condition: []
  action:
  - service: notify.lg_webos_smart_tv
    data:
      message: –û–±–µ–¥ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è!
  - delay:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
  - service: notify.lg_webos_smart_tv
    data:
      message: –û–±–µ–¥ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è!
  - service: script.say_by_alice
    data:
      message: –û–±–µ–¥ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è!
  mode: single
- id: '1620208571379'
  alias: –û–±–µ–¥!
  description: ''
  trigger:
  - platform: event
    event_type: yandex_intent
    event_data:
      text: –û–±–µ–¥
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: media_player.lg_webos_smart_tv
        state: 'off'
      sequence:
      - service: media_player.turn_on
        target:
          entity_id: media_player.lg_webos_smart_tv
    default: []
  - delay:
      hours: 0
      minutes: 0
      seconds: 13
      milliseconds: 0
  - service: timer.start
    data:
      duration: '0'
    target:
      entity_id: timer.dinner_end
  - service: media_player.select_source
    target:
      entity_id: media_player.lg_webos_smart_tv
    data:
      source: YouTube
  mode: single
- id: '1620222769842'
  alias: –ê–ª–∏—Å–∞, –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–π —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫
  description: ''
  trigger:
  - platform: event
    event_type: yandex_intent
    event_data:
      text: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–π —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫
  condition: []
  action:
  - service: script.1620222407435
  mode: single
- id: '1620741392513'
  alias: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–≥—Ä–µ–≤–æ–º –±–æ–ª—å—à–æ–π –ø–æ–¥—Å–≤–µ—Ç–∫–∏
  description: ''
  trigger:
  - platform: template
    value_template: '{{ states.sensor.temperatura_bolshoi_podsvetki.state | float(default=0)
      > 40 }}'
  - platform: state
    entity_id: input_boolean.upravlenie_peregrevom
  condition:
  - condition: state
    entity_id: input_boolean.upravlenie_peregrevom
    state: 'on'
  action:
  - service: light.turn_off
    target:
      entity_id: light.mqtt_lightentity_4
  mode: single
- id: '1621261422491'
  alias: –í—ã–∫–ª—é—á–∏—Ç—å –º—É–∑—ã–∫—É –≤–æ –≤—Ä–µ–º—è –∑–≤–æ–Ω–∫–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.oneplus_a5010_sostoianie_telefona
    to: ringing
  - platform: state
    entity_id: sensor.oneplus_a5010_sostoianie_telefona
    to: offhook
  condition:
  - condition: template
    value_template: '{{is_state(''person.imposibrus'', ''home'')}}'
  - condition: state
    entity_id: media_player.yandex_station_442078968308181c0410
    state: playing
  action:
  - service: var.set
    data:
      entity_id: var.yandex_station_volume
      value: '{{ state_attr(''media_player.yandex_station_442078968308181c0410'',
        ''volume_level'') }}'
  - service: media_player.volume_mute
    entity_id: media_player.yandex_station_442078968308181c0410
    data:
      is_volume_muted: true
  - wait_for_trigger:
    - platform: state
      entity_id: sensor.oneplus_a5010_sostoianie_telefona
      to: idle
    timeout: '300'
  - service: media_player.volume_set
    target:
      entity_id: media_player.yandex_station_442078968308181c0410
    data:
      volume_level: '{{ states(''var.yandex_station_volume'') }}'
  mode: single
- id: '1623060310948'
  alias: –†–∞–±–æ—Ç–∞!
  description: ''
  trigger:
  - platform: event
    event_type: yandex_intent
    event_data:
      text: –†–∞–±–æ—Ç–∞
  condition: []
  action:
  - scene: scene.rabota
  - service: script.say_by_alice
    data:
      message: –£–¥–∞—á–Ω–æ–π –æ—Ö–æ—Ç—ã!
  mode: single
- id: '1623185538029'
  alias: –ö–∞–º–∏–Ω
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.kamin
    to: 'on'
  condition: []
  action:
  - service: script.kamin_mode
  mode: single
- id: '1623185896372'
  alias: –ê–ª–∏—Å–∞ - –∫–∞–º–∏–Ω
  description: ''
  trigger:
  - platform: event
    event_type: yandex_intent
    event_data:
      text: –ö–∞–º–∏–Ω
  condition: []
  action:
  - service: input_boolean.turn_on
    target:
      entity_id: input_boolean.kamin
  mode: single
- id: '1623522776112'
  alias: '[AC] –ù–∞ —É–ª–∏—Ü–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ö–æ–ª–æ–¥–Ω–æ, –≤—ã–∫–ª—é—á–∏—Ç—å –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä'
  description: ''
  trigger:
  - platform: state
    entity_id: climate.hisense_irhvac
    attribute: hvac_action
    to: cooling
  - platform: template
    value_template: '{{ (states(''sensor.gismeteo_temperature'') | float(default=0))
      < (states(''input_number.climate_temp_weather_ac_min'') | float(default=0))
      }}'
  condition:
  - condition: state
    entity_id: climate.hisense_irhvac
    attribute: hvac_action
    state: cooling
  - condition: template
    value_template: '{{ (states(''sensor.gismeteo_temperature'') | float(default=0))
      < (states(''input_number.climate_temp_weather_ac_min'') | float(default=0))
      }}'
  action:
  - service: climate.set_hvac_mode
    target:
      entity_id: climate.hisense_irhvac
    data:
      hvac_mode: fan_only
  - service: notify.tg_home
    data:
      title: –ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä –Ω–∞ –ø—Ä–æ–≤–µ—Ç—Ä–∏–≤–∞–Ω–∏–µ
      message: –ù–∞ —É–ª–∏—Ü–µ –º–µ–Ω—å—à–µ {{ states('input_number.climate_temp_weather_ac_min')
        }}‚ÑÉ
      data:
        inline_keyboard:
        - –í—ã–∫–ª—é—á–∏—Ç—å:/AC_OFF, –û—Ö–ª–∞–∂–¥–µ–Ω–∏–µ:/AC_COOL, –û–∫:/do_nothing
  mode: single
- id: '1623528326770'
  alias: '[AC] –í–∫–ª—é—á–∏—Ç—å –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä, –∫–æ–≥–¥–∞ –∫—Ç–æ-—Ç–æ –ø—Ä–∏—Ö–æ–¥–∏—Ç –¥–æ–º–æ–π'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.template_anyone_home
    to: 'on'
    from: 'off'
  condition:
  - condition: state
    entity_id: climate.hisense_irhvac
    state: 'off'
  - condition: numeric_state
    entity_id: sensor.cleargrass_air_temperature
    above: '26'
  action:
  - service: climate.set_hvac_mode
    target:
      entity_id: climate.hisense_irhvac
    data:
      hvac_mode: cool
  - service: notify.tg_home
    data:
      title: –í–∫–ª—é—á–∞—é –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä –Ω–∞ –æ—Ö–ª–∞–∂–¥–µ–Ω–∏–µ
      message: –ö—Ç–æ-—Ç–æ –ø—Ä–∏—à–µ–ª –¥–æ–º–æ–π, –∫–æ–≥–¥–∞ –±—ã–ª–æ –∂–∞—Ä–∫–æ
  mode: single
- id: '1624472919161'
  alias: '[AC] –í–∫–ª—é—á–∏—Ç—å –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä, –∫–æ–≥–¥–∞ –∂–∞—Ä–∫–æ'
  description: ''
  trigger:
  - platform: state
    entity_id: climate.hisense_irhvac
    attribute: hvac_action
  - platform: template
    value_template: '{{ (states(''sensor.cleargrass_air_temperature'') | float(default=0))
      > (states(''input_number.climate_temp_max'') | float(default=0)) }}'
  condition:
  - condition: template
    value_template: '{{ state_attr(''climate.hisense_irhvac'', ''hvac_action'') !=
      ''cooling'' }}'
  - condition: template
    value_template: '{{ (states(''sensor.cleargrass_air_temperature'') | float(default=0))
      > (states(''input_number.climate_temp_max'') | float(default=0)) }}'
  - condition: state
    entity_id: binary_sensor.template_anyone_home
    state: 'on'
  action:
  - service: climate.set_hvac_mode
    target:
      entity_id: climate.hisense_irhvac
    data:
      hvac_mode: cool
  - service: notify.tg_home
    data:
      title: –í–∫–ª—é—á–∞—é –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä –Ω–∞ –æ—Ö–ª–∞–∂–¥–µ–Ω–∏–µ
      message: –î–æ–º–∞ –±–æ–ª—å—à–µ {{ states('input_number.climate_temp_max') }}‚ÑÉ
      data:
        inline_keyboard:
        - –í—ã–∫–ª—é—á–∏:/AC_OFF, –ù–∞ –ø—Ä–æ–≤–µ—Ç—Ä–∏–≤–∞–Ω–∏–µ:/AC_VENTILATION, –û–∫:/do_nothing
  mode: single
- id: '1624479537110'
  alias: '[TG] –ö–æ–º–∞–Ω–¥–∞ /do_nothing'
  description: ''
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      command: /do_nothing
  condition: []
  action:
  - service: telegram_bot.answer_callback_query
    data:
      message: –û–∫, –∏–≥–Ω–æ—Ä
      callback_query_id: '{{ trigger.event.data.id }}'
  - service: telegram_bot.delete_message
    data:
      message_id: '{{ trigger.event.data.message.message_id }}'
      chat_id: '{{ trigger.event.data.chat_id }}'
  mode: single
- id: '1626280661780'
  alias: –í–∞–¥–∏–º –∏–¥–µ—Ç –¥–æ–º–æ–π
  description: ''
  trigger:
  - platform: state
    entity_id: person.imposibrus
    from: –û—Ñ–∏—Å
    to: not_home
  condition:
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
    after: '18:30'
  action:
  - service: notify.tg_home
    data:
      title: –í–∞–¥–∏–º –≤—ã—à–µ–ª –∏–∑ –æ—Ñ–∏—Å–∞
      message: –ù–∏ –¥–Ω—è –Ω–µ –º–æ–∂–µ—Ç –±–µ–∑ —Å–≤–æ–µ–π –ª—é–±–∏–º–æ–πüòò
  mode: single
- id: '1627055594058'
  alias: '[TG] –ö–æ–º–∞–Ω–¥—ã –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–∞'
  description: ''
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      command: /AC_OFF
  - platform: event
    event_type: telegram_callback
    event_data:
      command: /AC_VENTILATION
  - platform: event
    event_type: telegram_callback
    event_data:
      command: /AC_COOL
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == ''/AC_VENTILATION'' }}'
      sequence:
      - service: climate.set_hvac_mode
        target:
          entity_id: climate.hisense_irhvac
        data:
          hvac_mode: fan_only
      - service: telegram_bot.answer_callback_query
        data:
          message: –ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä –Ω–∞ –ø—Ä–æ–≤–µ—Ç—Ä–∏–≤–∞–Ω–∏–∏!
          callback_query_id: '{{ trigger.event.data.id }}'
      - service: telegram_bot.delete_message
        data:
          chat_id: '{{ trigger.event.data.chat_id }}'
          message_id: '{{ trigger.event.data.message.message_id }}'
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == ''/AC_OFF'' }}'
      sequence:
      - service: climate.set_hvac_mode
        target:
          entity_id: climate.hisense_irhvac
        data:
          hvac_mode: 'off'
      - service: telegram_bot.answer_callback_query
        data:
          message: –ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä –≤—ã–∫–ª—é—á–µ–Ω!
          callback_query_id: '{{ trigger.event.data.id }}'
      - service: telegram_bot.delete_message
        data:
          chat_id: '{{ trigger.event.data.chat_id }}'
          message_id: '{{ trigger.event.data.message.message_id }}'
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == ''/AC_COOL'' }}'
      sequence:
      - service: climate.set_hvac_mode
        target:
          entity_id: climate.hisense_irhvac
        data:
          hvac_mode: cool
      - service: telegram_bot.answer_callback_query
        data:
          message: –ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä –Ω–∞ –æ—Ö–ª–∞–∂–¥–µ–Ω–∏–µ!
          callback_query_id: '{{ trigger.event.data.id }}'
      - service: telegram_bot.delete_message
        data:
          chat_id: '{{ trigger.event.data.chat_id }}'
          message_id: '{{ trigger.event.data.message.message_id }}'
    default: []
  mode: single
- id: '1638952855055'
  alias: –í–∫–ª—é—á–∏—Ç—å –ø–æ–¥—Å–≤–µ—Ç–∫—É —Ä–∞–±–æ—á–µ–≥–æ –º–µ—Å—Ç–∞ —É—Ç—Ä–æ–º
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.macbook_pro_active_2
    from: 'off'
    to: 'on'
  condition:
  - condition: time
    before: '12:00'
    after: 07:00
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
  - service: light.turn_on
    target:
      entity_id: light.mqtt_lightentity_4
  mode: single
- id: '1644352009872'
  alias: –í–∫–ª—é—á–µ–Ω–∏–µ –¢–í
  description: ''
  trigger:
  - platform: webostv.turn_on
    entity_id: media_player.lg_webos_smart_tv
  condition: []
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.lg_tv
  mode: single
