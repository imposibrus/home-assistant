- id: '1618991336207'
  alias: Home Assistant Restart Notification
  description: ''
  use_blueprint:
    path: gregoryduckworth/restart_notification.yaml
    input:
      notification_message: Home Assistant has successfully restarted!
      notify_device: 1ada3fdc6976622bd0226b539a5ccf25
- id: '1618991966165'
  alias: Home Assistant update notification
  description: ''
  use_blueprint:
    path: Klumper/update_notification.yaml
    input:
      notification_message: Home Assistant {{ newest_version }} is available
      delay: 0
      updater: binary_sensor.updater
      notify_device: 1ada3fdc6976622bd0226b539a5ccf25
      is_ios: false
- id: '1620159708446'
  alias: Обед закончился!
  description: ''
  trigger:
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.dinner_end
  condition: []
  action:
  - service: notify.lg_webos_smart_tv
    data:
      message: Обед заканчивается!
  - delay:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
  - service: notify.lg_webos_smart_tv
    data:
      message: Обед закончился!
  - service: script.say_by_alice
    data:
      message: Обед закончился!
  mode: single
- id: '1620208571379'
  alias: Алиса - Обед!
  description: ''
  trigger:
  - platform: event
    event_type: yandex_intent
    event_data:
      text: Обед
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: media_player.lg_webos_smart_tv
        state: 'off'
      sequence:
      - service: media_player.turn_on
        target:
          entity_id: media_player.lg_webos_smart_tv
        data: {}
    default: []
    enabled: true
  - delay:
      hours: 0
      minutes: 0
      seconds: 13
      milliseconds: 0
    enabled: false
  - service: timer.start
    data:
      duration: '0'
    target:
      entity_id: timer.dinner_end
  - service: media_player.select_source
    target:
      entity_id: media_player.lg_webos_smart_tv
    data:
      source: YouTube
    enabled: false
  - service: light.turn_on
    data: {}
    target:
      entity_id: light.island_lamp
    enabled: false
  - service: scene.turn_on
    target:
      entity_id: scene.obed
    metadata: {}
    enabled: false
  mode: single
- id: '1620222769842'
  alias: Алиса, Синхронизируй список покупок
  description: ''
  trigger:
  - platform: event
    event_type: yandex_intent
    event_data:
      text: Синхронизируй список покупок
  condition: []
  action:
  - service: script.1620222407435
  mode: single
- id: '1620741392513'
  alias: Управление перегревом большой подсветки
  description: ''
  trigger:
  - platform: template
    value_template: '{{ states.sensor.temperatura_bolshoi_podsvetki.state | float(default=0)
      > 40 }}'
  - platform: state
    entity_id: input_boolean.upravlenie_peregrevom
  condition:
  - condition: state
    entity_id: input_boolean.upravlenie_peregrevom
    state: 'on'
  action:
  - service: light.turn_off
    target:
      entity_id: light.mqtt_lightentity_4
  mode: single
- id: '1621261422491'
  alias: Выключить музыку во время звонка телефона
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.oneplus_a5010_sostoianie_telefona
    to: ringing
  - platform: state
    entity_id: sensor.oneplus_a5010_sostoianie_telefona
    to: offhook
  condition:
  - condition: template
    value_template: '{{is_state(''person.imposibrus'', ''home'')}}'
  - condition: state
    entity_id: media_player.yandex_station_442078968308181c0410
    state: playing
    enabled: false
  action:
  - service: var.set
    data:
      entity_id: var.yandex_station_volume
      value: '{{ state_attr(''media_player.yandex_station_442078968308181c0410'',
        ''volume_level'') }}'
    enabled: false
  - parallel:
    - service: var.set
      data:
        entity_id: var.yandex_station_volume
        value: '{{ state_attr(''media_player.yandex_station_442078968308181c0410'',
          ''volume_level'') }}'
    - service: var.set
      data:
        entity_id: var.yandex_station_lite_volume
        value: '{{ state_attr(''media_player.yandex_station_lp00000000000005131900001aedca28'',
          ''volume_level'') }}'
    - service: var.set
      data:
        entity_id: var.yandex_station_mini2_volume
        value: '{{ state_attr(''media_player.yandex_station_m0079n500vwm0g'', ''volume_level'')
          }}'
    enabled: true
  - service: media_player.volume_mute
    entity_id: media_player.yandex_station_442078968308181c0410
    data:
      is_volume_muted: true
    enabled: false
  - parallel:
    - service: media_player.volume_set
      target:
        entity_id: media_player.yandex_station_442078968308181c0410
      data:
        volume_level: 0.1
    - service: media_player.volume_set
      target:
        entity_id: media_player.yandex_station_lp00000000000005131900001aedca28
      data:
        volume_level: 0.1
    - service: media_player.volume_set
      target:
        entity_id: media_player.yandex_station_m0079n500vwm0g
      data:
        volume_level: 0.1
    enabled: true
  - wait_for_trigger:
    - platform: state
      entity_id: sensor.oneplus_a5010_sostoianie_telefona
      to: idle
    timeout:
      hours: 2
      minutes: 0
      seconds: 0
      milliseconds: 0
    continue_on_timeout: false
  - service: media_player.volume_set
    target:
      entity_id: media_player.yandex_station_442078968308181c0410
    data:
      volume_level: '{{ states(''var.yandex_station_volume'') }}'
    enabled: false
  - parallel:
    - service: media_player.volume_set
      target:
        entity_id: media_player.yandex_station_442078968308181c0410
      data:
        volume_level: '{{ states(''var.yandex_station_volume'') }}'
    - service: media_player.volume_set
      target:
        entity_id: media_player.yandex_station_lp00000000000005131900001aedca28
      data:
        volume_level: '{{ states(''var.yandex_station_lite_volume'') }}'
    - service: media_player.volume_set
      target:
        entity_id: media_player.yandex_station_m0079n500vwm0g
      data:
        volume_level: '{{ states(''var.yandex_station_mini2_volume'') }}'
  mode: single
- id: '1623060310948'
  alias: Работа!
  description: ''
  trigger:
  - platform: event
    event_type: yandex_intent
    event_data:
      text: Работа
  condition: []
  action:
  - scene: scene.rabota
  - service: script.say_by_alice
    data:
      message: Удачной охоты!
  mode: single
- id: '1623185538029'
  alias: Камин
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.kamin
    to: 'on'
  condition: []
  action:
  - service: script.kamin_mode
  mode: single
- id: '1623185896372'
  alias: Алиса - камин
  description: ''
  trigger:
  - platform: event
    event_type: yandex_intent
    event_data:
      text: Камин
  condition: []
  action:
  - service: input_boolean.turn_on
    target:
      entity_id: input_boolean.kamin
  mode: single
- id: '1623522776112'
  alias: '[AC] На улице достаточно холодно, выключить кондиционер'
  description: ''
  trigger:
  - platform: state
    entity_id: climate.hisense_irhvac
    attribute: hvac_action
    to: cooling
  - platform: template
    value_template: '{{ (states(''sensor.gismeteo_temperature'') | float(default=0))
      < (states(''input_number.climate_temp_weather_ac_min'') | float(default=0))
      }}'
  condition:
  - condition: state
    entity_id: climate.hisense_irhvac
    attribute: hvac_action
    state: cooling
  - condition: template
    value_template: '{{ (states(''sensor.gismeteo_temperature'') | float(default=0))
      < (states(''input_number.climate_temp_weather_ac_min'') | float(default=0))
      }}'
  action:
  - service: climate.set_hvac_mode
    target:
      entity_id: climate.hisense_irhvac
    data:
      hvac_mode: fan_only
  - service: notify.tg_home
    data:
      title: Кондиционер на проветривание
      message: На улице меньше {{ states('input_number.climate_temp_weather_ac_min')
        }}℃
      data:
        inline_keyboard:
        - Выключить:/AC_OFF, Охлаждение:/AC_COOL, Ок:/do_nothing
  mode: single
- id: '1623528326770'
  alias: '[AC] Включить кондиционер, когда кто-то приходит домой'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.template_anyone_home
    to: 'on'
    from: 'off'
  condition:
  - condition: state
    entity_id: climate.hisense_irhvac
    state: 'off'
  - condition: numeric_state
    entity_id: sensor.cleargrass_air_temperature
    above: '26'
  action:
  - service: climate.set_hvac_mode
    target:
      entity_id: climate.hisense_irhvac
    data:
      hvac_mode: cool
  - service: notify.tg_home
    data:
      title: Включаю кондиционер на охлаждение
      message: Кто-то пришел домой, когда было жарко
  mode: single
- id: '1624472919161'
  alias: '[AC] Включить кондиционер, когда жарко'
  description: ''
  trigger:
  - platform: state
    entity_id: climate.hisense_irhvac
    attribute: hvac_action
  - platform: template
    value_template: '{{ (states(''sensor.cleargrass_air_temperature'') | float(default=0))
      > (states(''input_number.climate_temp_max'') | float(default=0)) }}'
  condition:
  - condition: template
    value_template: '{{ state_attr(''climate.hisense_irhvac'', ''hvac_action'') !=
      ''cooling'' }}'
  - condition: template
    value_template: '{{ (states(''sensor.cleargrass_air_temperature'') | float(default=0))
      > (states(''input_number.climate_temp_max'') | float(default=0)) }}'
  - condition: state
    entity_id: binary_sensor.template_anyone_home
    state: 'on'
  action:
  - service: climate.set_hvac_mode
    target:
      entity_id: climate.hisense_irhvac
    data:
      hvac_mode: cool
  - service: notify.tg_home
    data:
      title: Включаю кондиционер на охлаждение
      message: Дома больше {{ states('input_number.climate_temp_max') }}℃
      data:
        inline_keyboard:
        - Выключи:/AC_OFF, На проветривание:/AC_VENTILATION, Ок:/do_nothing
  mode: single
- id: '1624479537110'
  alias: '[TG] Команда /do_nothing'
  description: ''
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      command: /do_nothing
  condition: []
  action:
  - service: telegram_bot.answer_callback_query
    data:
      message: Ок, игнор
      callback_query_id: '{{ trigger.event.data.id }}'
  - service: telegram_bot.delete_message
    data:
      message_id: '{{ trigger.event.data.message.message_id }}'
      chat_id: '{{ trigger.event.data.chat_id }}'
  mode: single
- id: '1626280661780'
  alias: Вадим идет домой
  description: ''
  trigger:
  - platform: state
    entity_id: person.imposibrus
    from: Офис
    to: not_home
  condition:
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
    after: '18:30'
  action:
  - service: notify.tg_home
    data:
      title: Вадим вышел из офиса
      message: "Ни дня не может без своей любимой\U0001F618"
  mode: single
- id: '1627055594058'
  alias: '[TG] Команды кондиционера'
  description: ''
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      command: /AC_OFF
  - platform: event
    event_type: telegram_callback
    event_data:
      command: /AC_VENTILATION
  - platform: event
    event_type: telegram_callback
    event_data:
      command: /AC_COOL
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == ''/AC_VENTILATION'' }}'
      sequence:
      - service: climate.set_hvac_mode
        target:
          entity_id: climate.hisense_irhvac
        data:
          hvac_mode: fan_only
      - service: telegram_bot.answer_callback_query
        data:
          message: Кондиционер на проветривании!
          callback_query_id: '{{ trigger.event.data.id }}'
      - service: telegram_bot.delete_message
        data:
          chat_id: '{{ trigger.event.data.chat_id }}'
          message_id: '{{ trigger.event.data.message.message_id }}'
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == ''/AC_OFF'' }}'
      sequence:
      - service: climate.set_hvac_mode
        target:
          entity_id: climate.hisense_irhvac
        data:
          hvac_mode: 'off'
      - service: telegram_bot.answer_callback_query
        data:
          message: Кондиционер выключен!
          callback_query_id: '{{ trigger.event.data.id }}'
      - service: telegram_bot.delete_message
        data:
          chat_id: '{{ trigger.event.data.chat_id }}'
          message_id: '{{ trigger.event.data.message.message_id }}'
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.command == ''/AC_COOL'' }}'
      sequence:
      - service: climate.set_hvac_mode
        target:
          entity_id: climate.hisense_irhvac
        data:
          hvac_mode: cool
      - service: telegram_bot.answer_callback_query
        data:
          message: Кондиционер на охлаждение!
          callback_query_id: '{{ trigger.event.data.id }}'
      - service: telegram_bot.delete_message
        data:
          chat_id: '{{ trigger.event.data.chat_id }}'
          message_id: '{{ trigger.event.data.message.message_id }}'
    default: []
  mode: single
- id: '1638952855055'
  alias: Включить подсветку рабочего места утром
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.macbook_pro_active_2
    from: 'off'
    to: 'on'
  condition:
  - condition: time
    before: '12:00'
    after: 07:00
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
  - service: light.turn_on
    target:
      entity_id: light.mqtt_lightentity_4
  mode: single
- id: '1644352009872'
  alias: Включение ТВ
  description: ''
  trigger:
  - platform: webostv.turn_on
    entity_id: media_player.lg_webos_smart_tv
  condition: []
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.lg_tv
  mode: single
- id: '1645999098032'
  alias: HA->WB Кто-нибудь дома?
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.template_anyone_home
  condition: []
  action:
  - service: mqtt.publish
    data:
      topic: /devices/is_anyone_home/controls/enabled
      payload_template: "{%- if trigger.to_state.state == 'on' -%}\n  1\n{%- else
        -%}\n  0\n{%- endif -%}\n"
  mode: single
- id: '1646340554332'
  alias: Алиса - кино
  description: ''
  trigger:
  - platform: event
    event_type: yandex_intent
    event_data:
      text: Кино
  condition: []
  action:
  - service: scene.turn_on
    target:
      entity_id: scene.kino
    metadata: {}
  mode: single
- id: '1646653902370'
  alias: Включить музыку, при открытии унитаза
  description: ''
  trigger:
  - type: opened
    platform: device
    device_id: b63263834183418594907c3cd6f7495e
    entity_id: binary_sensor.ble_opening_do_unitaz
    domain: binary_sensor
    for:
      hours: 0
      minutes: 0
      seconds: 5
  condition:
  - condition: state
    entity_id: light.liustra_sanuzla
    state: 'on'
  action:
  - service: media_player.volume_set
    data:
      volume_level: 0.5
    target:
      entity_id: media_player.yandex_station_lp00000000000005131900001aedca28
  - service: media_player.play_media
    data:
      media_content_id: Включи музыку
      media_content_type: command
    target:
      entity_id: media_player.yandex_station_lp00000000000005131900001aedca28
  mode: single
- id: '1650020014963'
  alias: '[Свет] Кладовка свет вкл/выкл'
  description: ''
  trigger:
  - type: no_motion
    platform: device
    device_id: ee447e2cadce402c4c5a67593e52549c
    entity_id: binary_sensor.dd_larder_occupancy
    domain: binary_sensor
    id: stop
    for:
      hours: 0
      minutes: 1
      seconds: 0
  - type: motion
    platform: device
    device_id: ee447e2cadce402c4c5a67593e52549c
    entity_id: binary_sensor.dd_larder_occupancy
    domain: binary_sensor
    id: start
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.id == ''start'' }}'
      sequence:
      - service: light.turn_on
        data: {}
        target:
          entity_id: light.svet_kladovka
    default:
    - service: light.turn_off
      data: {}
      target:
        entity_id: light.svet_kladovka
  mode: single
- id: '1650195632756'
  alias: '[Свет] Гардероб свет вкл/выкл'
  description: ''
  trigger:
  - type: no_motion
    platform: device
    device_id: d41ce2a5264e9347a7910243a6e9c9fd
    entity_id: binary_sensor.dd_wardrobe_occupancy
    domain: binary_sensor
    id: stop
    for:
      hours: 0
      minutes: 1
      seconds: 0
  - type: motion
    platform: device
    device_id: d41ce2a5264e9347a7910243a6e9c9fd
    entity_id: binary_sensor.dd_wardrobe_occupancy
    domain: binary_sensor
    id: start
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.id == ''start'' }}'
      sequence:
      - service: light.turn_on
        data: {}
        target:
          entity_id: light.svet_garderob
    default:
    - service: light.turn_off
      data: {}
      target:
        entity_id: light.svet_garderob
  mode: single
- id: '1650198456127'
  alias: Мастер-выключатель
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.schetchik_mater_vykliuchatelia
  condition:
  - condition: template
    value_template: '{{ trigger.from_state.state != ''unavailable'' and trigger.from_state.state
      != ''unknown'' and trigger.from_state.state != '''' and trigger.to_state.state
      != ''unavailable'' and trigger.to_state.state != ''unknown'' and trigger.to_state.state
      != '''' }}'
    alias: Состояние не unavailable и не unknown
  - condition: template
    value_template: '{{ trigger.from_state.state | int(0) < trigger.to_state.state
      | int(0) }}'
    alias: Счетчик изменился в большую сторону
  action:
  - service: scene.turn_on
    target:
      entity_id: scene.vse_ushli
    metadata: {}
  mode: single
- id: '1651772300833'
  alias: '[Пылесос] Обновлять карту только во время работы'
  description: ''
  use_blueprint:
    path: PiotrMachowski/disable_vacuum_camera_update_when_docked.yaml
    input:
      vacuum: vacuum.dreame_p2029_bf7e_robot_cleaner
      camera: camera.xiaomi_cloud_map_extractor
- id: '1652617820669'
  alias: Cast to Cameras to Chromecast
  description: ''
  use_blueprint:
    path: kind3r/cast-and-re-cast-a-lovelace-view-to-a-google-hub.yaml
    input:
      player: media_player.gostinaia_2
      view: cameras
- id: '1653589958734'
  alias: '[Alerts] Уведомление при перегреве'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.temperatura_polotentsesushitelia_sanuzla
    id: small_bath_towel
  - platform: state
    entity_id:
    - sensor.temperatura_tp_sanuzla
    id: small_bath_floor
  - platform: state
    entity_id:
    - sensor.temperatura_tp_dushevoi
    id: small_bath_shower
  condition:
  - condition: template
    value_template: '{{ not state_attr(''automation.alerts_uvedomlenie_pri_peregreve'',''last_triggered'')
      or (as_timestamp(now()) - as_timestamp(state_attr(''automation.alerts_uvedomlenie_pri_peregreve'',''last_triggered'')))
      > (60 * 5) }}'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: small_bath_towel
      - condition: template
        value_template: '{{ trigger.to_state.state | float(0) > states(''input_number.bath_small_towel_temp_max'')
          | float(0) }}'
      sequence:
      - service: script.alert
        data:
          title: Перегрев
          message: Полотенчик в санузле перегрелся.
    - conditions:
      - condition: trigger
        id: small_bath_floor
      - condition: template
        value_template: '{{ trigger.to_state.state | float(0) > states(''input_number.bath_small_floor_temp_max'')
          | float(0) }}'
      sequence:
      - service: script.alert
        data:
          title: Перегрев
          message: Пол в санузле перегрелся.
    - conditions:
      - condition: trigger
        id: small_bath_shower
      - condition: template
        value_template: '{{ trigger.to_state.state | float(0) > states(''input_number.bath_small_shower_temp_max'')
          | float(0) }}'
      sequence:
      - service: script.alert
        data:
          title: Перегрев
          message: Душевой поддон в санузле перегрелся.
    default: []
  mode: single
- id: '1657037750024'
  alias: '[Пылесос] Уборка всего дома через Алису'
  description: ''
  trigger:
  - platform: event
    event_type: yandex_intent
    event_data:
      text: Уберись дома
    id: start1
  - platform: event
    event_type: yandex_intent
    event_data:
      text: Останови уборку
    id: stop
  - platform: event
    event_type: yandex_intent
    event_data:
      text: Пропылесось
    id: start2
  condition: []
  action:
  - if:
    - condition: or
      conditions:
      - condition: trigger
        id: start1
      - condition: trigger
        id: start2
    then:
    - service: vacuum.start
      data: {}
      target:
        entity_id: vacuum.dreame_p2029_bf7e_robot_cleaner
    else:
    - service: vacuum.stop
      data: {}
      target:
        entity_id: vacuum.dreame_p2029_bf7e_robot_cleaner
  mode: single
- id: '1657633221475'
  alias: '[Пылесос] Уборка всего дома, когда никого нет'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.template_anyone_home
    to: 'off'
    for:
      hours: 0
      minutes: 15
      seconds: 0
  condition:
  - condition: state
    entity_id: vacuum.dreame_p2029_bf7e_robot_cleaner
    state: idle
  - condition: state
    entity_id: binary_sensor.vacuum_do_not_disturb
    state: 'off'
  - condition: template
    value_template: '{{ now().strftime("%d") != this.attributes.last_triggered.strftime("%d")
      }}'
  action:
  - service: vacuum.start
    data: {}
    target:
      entity_id: vacuum.dreame_p2029_bf7e_robot_cleaner
  - service: notify.tg_home
    data:
      message: Никого нет дома больше 15 минут
      title: Начинаю уборку
  mode: single
- id: '1657696633368'
  alias: '[Свет] Запустить Hyperion после включения ТВ'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - media_player.lg_webos_smart_tv
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 10
    id: tv_on
  - platform: state
    entity_id:
    - device_tracker.lgwebostv
    to: home
    for:
      hours: 0
      minutes: 0
      seconds: 10
    id: device_tracker_tv_home
  - platform: state
    entity_id:
    - media_player.lg_webos_smart_tv
    to: 'off'
    id: tv_off
  condition:
  - condition: state
    entity_id: input_boolean.hyperion_running
    state: 'off'
    enabled: false
  - condition: sun
    after: sunset
    after_offset: -02:00:00
    enabled: false
  action:
  - if:
    - condition: or
      conditions:
      - condition: trigger
        id: tv_on
      - condition: trigger
        id: device_tracker_tv_home
    - condition: state
      entity_id: input_boolean.hyperion_running
      state: 'off'
    then:
    - service: input_boolean.turn_on
      data: {}
      target:
        entity_id: input_boolean.hyperion_running
    - service: shell_command.piccap_capture_service
      data: {}
    else:
    - condition: trigger
      id: tv_off
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id: input_boolean.hyperion_running
  mode: single
- id: '1657743087135'
  alias: '[Свет] Спальня мастер выключатель бра'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.schetchik_dolgikh_nazhatii_bra_vadim
    - sensor.schetchik_dolgikh_nazhatii_bra_aliia
  condition:
  - condition: template
    value_template: '{{ trigger.to_state.state != ''unavailable'' and trigger.to_state.state
      != ''unknown'' and trigger.from_state.state != ''unavailable'' and trigger.from_state.state
      != ''unknown'' and trigger.from_state.state | int(0) < trigger.to_state.state
      | int(0) }}'
  action:
  - service: light.turn_off
    data: {}
    target:
      entity_id:
      - light.liustra_spalni
      - light.svet_garderob
      - light.bedroom_bra_vadim
      - light.bedroom_bra_aliya
      - light.bedroom_cover_backlight
    enabled: false
  - service: scene.turn_on
    target:
      entity_id: scene.spalnia_zasypaem
    metadata: {}
  mode: single
- id: '1657810467056'
  alias: '[AC] Осушение кондиционера'
  description: ''
  trigger:
  - platform: time_pattern
    hours: /2
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: climate.ac_office
      state: dry
      for:
        hours: 1
        minutes: 0
        seconds: 0
    - condition: state
      entity_id: climate.ac_office
      state: cool
      for:
        hours: 1
        minutes: 0
        seconds: 0
  - condition: not
    conditions:
    - condition: state
      entity_id: sensor.ac_invertor_power
      state: '0'
      for:
        hours: 0
        minutes: 15
        seconds: 0
  action:
  - service: var.set
    data:
      entity_id: var.ac_office_last_state
      value_template: '{{ states("climate.ac_office") }}'
    enabled: true
  - service: var.set
    data:
      entity_id: var.ac_office_last_fan_mode
      value_template: '{{ state_attr("climate.ac_office", "fan_mode") }}'
    enabled: true
  - service: climate.set_fan_mode
    data:
      fan_mode: high
    target:
      entity_id: climate.ac_office
  - service: climate.set_hvac_mode
    data:
      hvac_mode: fan_only
    target:
      entity_id: climate.ac_office
  - delay:
      hours: 0
      minutes: 30
      seconds: 0
      milliseconds: 0
  - if:
    - condition: state
      entity_id: climate.ac_office
      state: fan_only
    - condition: state
      entity_id: climate.ac_office
      attribute: fan_mode
      state: high
    then:
    - service: climate.set_fan_mode
      data:
        fan_mode: '{{ states(''var.ac_office_last_fan_mode'') }}'
      target:
        entity_id: climate.ac_office
    - service: climate.set_hvac_mode
      data:
        hvac_mode: '{{ states(''var.ac_office_last_state'') }}'
      target:
        entity_id: climate.ac_office
  mode: single
- id: '1657997914458'
  alias: '[test] cube'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.magic_cube_action
    id: shake
    to: shake
  - platform: state
    entity_id:
    - sensor.magic_cube_action_angle
    id: rotate
  - platform: state
    entity_id:
    - sensor.magic_cube_action
    id: tap
    to: tap
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: shake
      sequence:
      - service: light.toggle
        data: {}
        target:
          entity_id: light.liustra_kabineta
    - conditions:
      - condition: state
        entity_id: sensor.magic_cube_last_side
        state: '5'
      sequence:
      - choose:
        - conditions:
          - condition: trigger
            id: rotate
          sequence:
          - service: light.turn_on
            data:
              brightness_step_pct: '{{ trigger.to_state.state | int(default=0) / 5
                | int }}'
            target:
              entity_id: light.island_lamp
        - conditions:
          - condition: trigger
            id: tap
          sequence:
          - service: light.toggle
            data: {}
            target:
              entity_id: light.island_lamp
        default: []
    - conditions:
      - condition: state
        entity_id: sensor.magic_cube_last_side
        state: '1'
      sequence:
      - choose:
        - conditions:
          - condition: trigger
            id: rotate
          sequence:
          - service: light.turn_on
            data:
              brightness_step_pct: '{{ trigger.to_state.state | int(default=0) / 5
                | int }}'
            target:
              entity_id: light.podsvetka_kukhni
        - conditions:
          - condition: trigger
            id: tap
          sequence:
          - service: light.toggle
            data: {}
            target:
              entity_id: light.podsvetka_kukhni
        default: []
    - conditions:
      - condition: state
        entity_id: sensor.magic_cube_last_side
        state: '2'
      sequence:
      - choose:
        - conditions:
          - condition: trigger
            id: tap
          sequence:
          - service: switch.toggle
            data: {}
            enabled: false
            target:
              entity_id: switch.0x00158d00025863b3
        default: []
    - conditions:
      - condition: state
        entity_id: sensor.magic_cube_last_side
        state: '4'
      sequence:
      - choose:
        - conditions:
          - condition: trigger
            id: tap
          sequence:
          - service: light.toggle
            data: {}
            target:
              entity_id: light.svet_gostinoi_i_kukhni
        default: []
    default: []
  mode: queued
- id: '1661098587855'
  alias: '[Пылесос] Напоминание об очистке швабры'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - vacuum.dreame_p2029_bf7e_robot_cleaner
    to: cleaning
    for:
      hours: 0
      minutes: 1
      seconds: 0
  condition:
  - condition: numeric_state
    entity_id: vacuum.dreame_p2029_bf7e_robot_cleaner
    attribute: vacuum_extend.waterbox_status
    above: '0'
  action:
  - wait_for_trigger:
    - platform: state
      entity_id:
      - vacuum.dreame_p2029_bf7e_robot_cleaner
      to: docked
      for:
        hours: 0
        minutes: 5
        seconds: 0
    - platform: state
      entity_id:
      - vacuum.dreame_p2029_bf7e_robot_cleaner
      to: idle
      for:
        hours: 0
        minutes: 5
        seconds: 0
    continue_on_timeout: false
  - if:
    - condition: numeric_state
      entity_id: vacuum.dreame_p2029_bf7e_robot_cleaner
      attribute: vacuum_extend.waterbox_status
      above: '0'
    then:
    - service: notify.tg_home
      data:
        title: Полы помыты
        message: Пора помыть салфетку
        data:
          inline_keyboard:
          - Я сделяль:/VACUUM_MOP_CLEANED, Скройся:/do_nothing
  mode: restart
- id: '1661099249307'
  alias: '[TG] Команды пылесоса'
  description: ''
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      command: /VACUUM_MOP_CLEANED
    id: VACUUM_MOP_CLEANED
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: VACUUM_MOP_CLEANED
      sequence:
      - service: telegram_bot.delete_message
        data:
          chat_id: '{{ trigger.event.data.chat_id }}'
          message_id: '{{ trigger.event.data.message.message_id }}'
    default: []
  mode: single
- id: '1662904774435'
  alias: '[WB] Настройки температур'
  description: При старте HA, отправить запрос в WB на получение текущих настроек
    температур (setpoints).
  trigger:
  - platform: homeassistant
    event: start
    id: ha_started
  - platform: mqtt
    topic: /rpc/v1/confed/Editor/Save/+
    id: mqtt_saved
  - platform: mqtt
    topic: /rpc/v1/confed/Editor/Load/+/reply
    id: mqtt_loaded
  - platform: state
    entity_id:
    - input_number.bath_small_floor_temp_wanted
    - input_number.bath_small_shower_temp_wanted
    - input_number.bath_small_towel_temp_wanted
    id: setpoints_changed
  condition:
  - condition: or
    conditions:
    - condition: and
      conditions:
      - condition: trigger
        id: mqtt_saved
      - condition: template
        value_template: '{{ trigger.payload_json[''params''][''path''] == ''/usr/share/wb-mqtt-confed/schemas/wb-mqtt-setpoints.schema.json''
          }}'
    - condition: trigger
      id: ha_started
    - condition: and
      conditions:
      - condition: trigger
        id: mqtt_loaded
      - condition: template
        value_template: '{{ trigger.payload_json[''result''][''configPath''] == ''/etc/wb-mqtt-setpoints.json''
          }}'
    - condition: trigger
      id: setpoints_changed
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: ha_started
      sequence:
      - service: mqtt.publish
        data:
          topic: /rpc/v1/confed/Editor/Load/home-assistant
          payload: '{"id":2,"params":{"path":"/usr/share/wb-mqtt-confed/schemas/wb-mqtt-setpoints.schema.json"}}'
    - conditions:
      - condition: trigger
        id: mqtt_saved
      sequence:
      - service: input_number.set_value
        data:
          value: '{{ trigger.payload_json[''params''][''content''][''bath_small_floor_temp_wanted'']
            }}'
        target:
          entity_id: input_number.bath_small_floor_temp_wanted
      - service: input_number.set_value
        data:
          value: '{{ trigger.payload_json[''params''][''content''][''bath_small_shower_temp_wanted'']
            }}'
        target:
          entity_id: input_number.bath_small_shower_temp_wanted
      - service: input_number.set_value
        data:
          value: '{{ trigger.payload_json[''params''][''content''][''bath_small_towel_temp_wanted'']
            }}'
        target:
          entity_id: input_number.bath_small_towel_temp_wanted
    - conditions:
      - condition: trigger
        id: mqtt_loaded
      sequence:
      - service: input_number.set_value
        data:
          value: '{{ trigger.payload_json[''result''][''content''][''bath_small_floor_temp_wanted'']
            }}'
        target:
          entity_id: input_number.bath_small_floor_temp_wanted
      - service: input_number.set_value
        data:
          value: '{{ trigger.payload_json[''result''][''content''][''bath_small_shower_temp_wanted'']
            }}'
        target:
          entity_id: input_number.bath_small_shower_temp_wanted
      - service: input_number.set_value
        data:
          value: '{{ trigger.payload_json[''result''][''content''][''bath_small_towel_temp_wanted'']
            }}'
        target:
          entity_id: input_number.bath_small_towel_temp_wanted
    - conditions:
      - condition: trigger
        id: setpoints_changed
      sequence:
      - service: mqtt.publish
        data:
          topic: /rpc/v1/confed/Editor/Save/home-assistant
          payload: "{\n  \"id\":3,\n  \"params\":{\n    \"path\":\"/usr/share/wb-mqtt-confed/schemas/wb-mqtt-setpoints.schema.json\",\n
            \   \"content\":{\n      \"bath_small_floor_temp_wanted\":{{states('input_number.bath_small_floor_temp_wanted')}},\n
            \     \"bath_small_shower_temp_wanted\":{{states('input_number.bath_small_shower_temp_wanted')}},\n
            \     \"bath_small_towel_temp_wanted\":{{states('input_number.bath_small_towel_temp_wanted')}},\n
            \     \"hall_floor_temp_wanted\":25,\n      \"hysteresis\":2\n    }\n
            \ }\n}"
  mode: single
- id: '1664132624756'
  alias: Звонок в дверь
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.doorbell_button
    to: 'on'
  condition:
  - condition: template
    value_template: '{{trigger.to_state.state != ''unavailable'' and trigger.from_state.state
      != trigger.to_state.state}}'
  - condition: time
    after: 06:00:00
    before: 01:00:00
  action:
  - parallel:
    - service: mqtt.publish
      data:
        topic: /devices/buzzersound/controls/Play Nokia/on
        payload: 1
    - service: media_player.play_media
      data:
        media_content_id: <speaker audio="alice-sounds-game-8-bit-phone-1.opus"> В
          дверь звонят
        media_content_type: dialog
        extra:
          volume_level: 0.5
      target:
        entity_id:
        - media_player.yandex_station_442078968308181c0410
        - media_player.yandex_station_lp00000000000005131900001aedca28
    - service: light.turn_on
      data:
        entity_id: light.yeelight_torchere
        effect: Flash
    - parallel:
      - service: notify.lg_webos_smart_tv
        data:
          message: В дверь звонят!
      - service: rest_command.pipup_url_on_tv
        data:
          message: В дверь звонят!
          position: 0
          url: https://ha.imposibrus.space/api/camera_proxy_stream/camera.doorbell_cam?token={{
            state_attr('camera.doorbell_cam', 'access_token') }}
      - service: rest_command.pipup_image_on_tv
        data:
          message: В дверь звонят!
          position: 0
          url: https://ha.imposibrus.space{{ state_attr('camera.doorbell_cam', 'entity_picture')
            }}
        enabled: false
  - parallel:
    - sequence:
      - wait_template: '{{ is_state_attr(''media_player.yandex_station_442078968308181c0410'',
          ''alice_state'', ''LISTENING'') }}'
        continue_on_timeout: false
      - service: media_player.play_media
        data:
          media_content_type: text
          media_content_id: ой
          extra:
            volume_level: 0.1
        target:
          entity_id: media_player.yandex_station_442078968308181c0410
    - sequence:
      - wait_template: '{{ is_state_attr(''media_player.yandex_station_lp00000000000005131900001aedca28'',
          ''alice_state'', ''LISTENING'') }}'
        continue_on_timeout: false
      - service: media_player.play_media
        data:
          media_content_type: text
          media_content_id: ой
          extra:
            volume_level: 0.1
        target:
          entity_id: media_player.yandex_station_lp00000000000005131900001aedca28
    enabled: false
  mode: single
- id: '1665503496732'
  alias: '[test] notify when "anyone home" changes'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.template_anyone_home
  condition: []
  action:
  - service: notify.mobile_app_oneplus_a5010
    data:
      title: Все дома?
      message: '{{ states(''binary_sensor.template_anyone_home'') }}'
  mode: single
- id: '1665519540633'
  alias: '[test] person home/not home notification'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - person.imposibrus
  - platform: state
    entity_id:
    - person.aliya
  condition:
  - condition: template
    value_template: '{{ trigger.from_state.state != ''unavailable'' and trigger.from_state.state
      != ''unknown'' and trigger.to_state.state != ''unavailable'' and trigger.to_state.state
      != ''unknown'' }}'
    alias: Состояние не unavailable и не unknown
  - condition: template
    value_template: '{{ trigger.from_state.state != trigger.to_state.state }}'
    alias: Предыдущее состояние не равно новому
  action:
  - service: notify.mobile_app_oneplus_a5010
    data:
      title: '{{ trigger.to_state.attributes.friendly_name }} дома/не дома'
      message: '{{ states(''trigger.to_state.state'') }}'
  mode: single
- id: '1665850925808'
  alias: Будильник управление
  description: 'Алиса - разбуди нас утром: Ставит будильник через 8 часов'
  trigger:
  - platform: event
    event_type: yandex_intent
    event_data:
      text: Мы спать
    id: alice
  - platform: state
    entity_id:
    - input_datetime.alarm_clock
    id: date_changed
  - platform: state
    entity_id:
    - input_boolean.alarm_clock_canceled
    to: 'on'
    id: alarm_canceled
  - platform: state
    entity_id:
    - automation.budilnik_svetom_i_alisoi
    id: automation_reloaded
    from: 'on'
  - platform: state
    entity_id:
    - sensor.schetchik_dolgikh_nazhatii_bra_aliia
    - sensor.schetchik_dolgikh_nazhatii_bra_vadim
    - sensor.schetchik_korotkikh_nazhatii_bra_vadim
    - sensor.schetchik_korotkikh_nazhatii_bra_aliia
    - sensor.schetchik_nazhatii_podsvetka_shtory_spalni
    id: bed_buttons_press
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: alice
      sequence:
      - service: input_datetime.set_datetime
        target:
          entity_id: input_datetime.alarm_clock
        data:
          timestamp: '{{ now().timestamp() + (60 * 60 * 8) }}'
    - conditions:
      - condition: trigger
        id: date_changed
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.alarm_clock_canceled
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.alarm_clock_is_ringing
    - conditions:
      - condition: trigger
        id: alarm_canceled
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.alarm_clock_is_ringing
    - conditions:
      - condition: trigger
        id: bed_buttons_press
      - condition: state
        entity_id: input_boolean.alarm_clock_is_ringing
        state: 'on'
      - condition: template
        value_template: '{{ trigger.from_state.state != ''unavailable'' and trigger.from_state.state
          != ''unknown'' and trigger.from_state.state != '''' and trigger.to_state.state
          != ''unavailable'' and trigger.to_state.state != ''unknown'' and trigger.to_state.state
          != '''' }}'
        alias: Состояние не unavailable и не unknown
      - condition: template
        value_template: '{{ trigger.from_state.state != trigger.to_state.state and
          int(trigger.to_state.state, 0) > 0 }}'
        alias: Счетчик нажатий кнопок изменился и больше 0
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.alarm_clock_canceled
    - conditions:
      - condition: trigger
        id: automation_reloaded
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.alarm_clock_is_ringing
  mode: parallel
  max: 10
- id: '1665851712685'
  alias: Будильник светом и Алисой
  description: ''
  trigger:
  - platform: time
    at: input_datetime.alarm_clock
  condition: []
  action:
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.alarm_clock_is_ringing
  - repeat:
      while:
      - condition: template
        value_template: '{{ state_attr(''input_datetime.alarm_clock'', ''timestamp'')
          + (60 * 5) > now().timestamp() and is_state(''input_boolean.alarm_clock_canceled'',
          ''off'') }}'
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.alarm_clock_canceled
          state: 'on'
        then:
        - stop: Будильник отключен
      - service: light.turn_on
        data:
          brightness_pct: '{% set total = 60 * 5 %} {% set elapsed = now().timestamp()
            - state_attr(''input_datetime.alarm_clock'', ''timestamp'') %} {% set
            percent = int(elapsed / total * 100, 0) %} {{ percent }}'
        target:
          entity_id:
          - light.bedroom_cover_backlight
          - light.liustra_spalni
      - delay:
          hours: 0
          minutes: 0
          seconds: 9
          milliseconds: 0
  - wait_template: '{{ is_state(''input_boolean.alarm_clock_canceled'', ''on'') }}'
    continue_on_timeout: true
    timeout: 00:05:00
  - if:
    - condition: state
      entity_id: input_boolean.alarm_clock_canceled
      state: 'on'
    then:
    - stop: Будильник отключен
  - service: media_player.volume_set
    data:
      volume_level: 0.1
    target:
      entity_id:
      - media_player.yandex_station_m0079n500vwm0g
  - service: media_player.play_media
    data:
      media_content_type: command
      media_content_id: Включи музыку
    target:
      entity_id:
      - media_player.yandex_station_m0079n500vwm0g
  - repeat:
      count: '5'
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.alarm_clock_canceled
          state: 'on'
        then:
        - service: media_player.media_pause
          data: {}
          target:
            entity_id:
            - media_player.yandex_station_442078968308181c0410
            - media_player.yandex_station_lp00000000000005131900001aedca28
          enabled: false
        - stop: Будильник отключен
      - service: media_player.volume_set
        data:
          volume_level: '{{ 0.1 + ((repeat.index - 1) * 0.1) }}'
        target:
          entity_id:
          - media_player.yandex_station_m0079n500vwm0g
      - delay:
          hours: 0
          minutes: 0
          seconds: 20
          milliseconds: 0
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.alarm_clock_is_ringing
  mode: single
- id: '1665863130636'
  alias: Алиса - готовка
  description: ''
  trigger:
  - platform: event
    event_type: yandex_intent
    event_data:
      text: Готовка
  condition: []
  action:
  - service: scene.turn_on
    target:
      entity_id: scene.gotovka
    metadata: {}
  mode: single
- id: '1665867675999'
  alias: LgWebOSTV Wake on LAN
  description: ''
  trigger:
  - platform: device
    device_id: 977915d4fe2efb7b16f1125f39998638
    domain: webostv
    type: webostv.turn_on
  condition: []
  action:
  - service: wake_on_lan.send_magic_packet
    data:
      mac: 64:95:6C:95:29:3F
  mode: single
- id: '1665947235292'
  alias: '[Свет] Вкл/выкл подсветки раковины санузла'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.bath_small_sink_switch
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: light.toggle
    entity_id: light.bath_small_backlight
    data: {}
  mode: single
- id: '1666533904225'
  alias: '[Свет] Мастер-выключатель спальни у входа'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.bedroom_enter_master_switch_counter
  condition:
  - condition: template
    value_template: '{{ trigger.to_state.state != ''unavailable'' and trigger.to_state.state
      != ''unknown'' and trigger.from_state.state != ''unavailable'' and trigger.from_state.state
      != ''unknown'' and trigger.from_state.state | int(0) < trigger.to_state.state
      | int(0) }}'
  action:
  - service: light.turn_off
    data: {}
    target:
      entity_id:
      - light.liustra_spalni
      - light.svet_garderob
      - light.bedroom_bra_vadim
      - light.bedroom_bra_aliya
      - light.bedroom_cover_backlight
    enabled: false
  - service: scene.turn_on
    target:
      entity_id: scene.spalnia_zasypaem
    metadata: {}
  mode: single
- id: '1667222472920'
  alias: '[Свет] Включение света в гардеробе'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.bedroom_makeup_table_switch
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: switch.toggle
    data: {}
    target:
      entity_id: switch.light_wardrobe
  mode: single
- id: '1667597719587'
  alias: '[Свет] Мастер-выключатель кабинета'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.office_enter_master_switch_counter
  condition:
  - condition: template
    value_template: '{{ trigger.from_state.state != ''unavailable'' and trigger.from_state.state
      != ''unknown'' and trigger.from_state.state != '''' and trigger.to_state.state
      != ''unavailable'' and trigger.to_state.state != ''unknown'' and trigger.to_state.state
      != '''' }}'
    alias: Состояние не unavailable и не unknown
  - condition: template
    value_template: '{{ trigger.from_state.state | int(0) < trigger.to_state.state
      | int(0) }}'
    alias: Счетчик увеличился
  action:
  - service: light.turn_off
    data: {}
    target:
      entity_id:
      - light.yeelight_torchere
      - light.liustra_kabineta
  mode: single
